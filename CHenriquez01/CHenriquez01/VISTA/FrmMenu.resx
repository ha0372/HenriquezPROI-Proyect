<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCACQAL4DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD94KKKKACiiigAooooAKKKKACodS1K20XTbi9vbm3s7O0jMs9x
        PIsUUCAZLOzEBVA6knFeHf8ABRH/AIKMfDX/AIJkfs+XfxB+JGpMkRY2+kaPaMjajr91jIgt0YjOMgu5
        wqLyT0B/lk/4Kjf8F0Pjf/wVH8S3Nr4h1l/Cnw7jkzY+DdEnkh05VBO17k53XU2Dy8nyg52IgOKAP6E/
        2sv+Dmf9kj9lTULrTF8d3XxD1y0YpJZeD7I6hGjDgg3LFLc8/wB2RjXxr8Qf+D23wZptyR4U+AHifWoc
        8Nq3iiDTGI/3Y7e4H61/PRRQB/RP8Mv+D2P4caxNEvjH4HeNPD6swDvpGuW2rBBnr+8jtia+5/2Ov+Dg
        n9lP9tbULTS/D3xLtPDXiS8ZUj0bxVCdIuZHboiSSEwSNx0SVjyPWv48aKAP74OoBGCCMgjoR60V/J9/
        wSK/4ORPi7/wTn1XTfCvi+81D4nfB8SLHLo2o3Bm1DRIuAW0+d2ygAHEDkxHnAQktX9QP7Ln7UngT9s/
        4G6H8R/hvr1t4j8J+IIy9tcxgo8TqcPDLGfmjlRvlZGAIPqCCQD0CiiigAooooAKKKKACiiigAooooAK
        KKKACiiigArlfjj8avDX7OHwc8T+PvGOox6T4W8IabNqup3TcmOGJSxCj+J2OFVRyzMqjkiuqr8Tf+Dz
        L9tu5+H3wF+H3wJ0e7eG48e3D+ItfVGIJsbVwltE3qslwXf62w9qAPxj/wCCqn/BSbxd/wAFRv2t9c+I
        niKS4tNGR3svDOiNJui0LTVcmKEY4MhB3SOPvuSeBtA+baKKACiiigAooooAK++f+CAH/BYLVP8Aglx+
        1Xa2Wu3s8/we8e3UVl4qsScpp5JCR6nGMEh4M5cL/rI9y4JCFfgaigD+9nTNTttb0y2vbK4hvLK9hS4t
        54XDxzxuoZHUjgqVIIPcGp6/Nr/g1k/biuv2vv8AgmHpvh/W743nij4PXx8K3LSSbppbERiWxkbknAiL
        Qgnr9lNfpLQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAV/KB/wAHXnxXvfiJ/wAFofHWkXLKbTwLo2i6
        JZbWyPLfT4b5+Ox828kB/wB0V/V/X8iv/Bztpcml/wDBcX44B1YLcPotwhIIDK+h6e3HqASR9QaAPgmi
        iigAooooAKKKKACiiigD9pv+DKf4rS6F+1/8YfBfnstt4n8I2+qGHtJLZXYVX+qreSj/AIGa/o6r+Zn/
        AIMx/DdzqH/BSjxxqkag2mmfD+7jmb0aW8swn/oJr+magAooooAKKKKACiiigAooooAKKKKACiiigAr+
        b/8A4PP/ANl258F/te/Dj4uWts39l+O/Dx0S7mVflW9sJCRuOOC0E8WMnkRNwNvP9IFfJn/Ba/8A4Jzx
        /wDBTj9gLxV4BsUtx4z03Gu+EppSFVdSgVtkJYkBVnQvCWPC+YGwdtAH8aVFX/FXhbUvA3ijUtE1ixud
        M1fR7qWxvrO5jMc1pPE5SSJ1PKsrKQQehBqhQAUUUUAFFFFABRRXcfs0/s7+Kv2s/j34T+G/grTZ9V8T
        +MdSh02xgjQsEZ2w0shAO2KNdzu54REZiQATQB+9v/Bll+ylc+EvgT8WvjNqMIRfGWpW3hnRy6EN5Fmr
        TXMinoUeWeFPZrZq/buvK/2If2UNC/Yb/ZM8BfCfw7sk0/wVpMVlJcqmw39yfnuLlh2aWZpJD6bsdq9U
        oAKKKKACiiigAooooAKKKKACiiigAooooAKKVVLHABJPYV82fti/8Fev2cP2D0uIPiR8VvDOn63brk6D
        p839p6wTgkA2sG94844aUIp9aAPz0/4OPv8Ag3ivf2sL/UPj38C9Ljl+IkcW/wAVeF4FVD4nVcYvLbgD
        7Yoz5iMf3yhSuJFKy/zhalptxo2o3FneW81pd2kjQzwTIY5IXUkMjKeQwIIIPIIr+nDQP+Dxz9mrXfjl
        pnh1vC/xK0rwldztBc+K7+0gWKyP8Ev2WKSSVoiepGHUc7G6V7J+3v8A8EUP2ZP+C1vgyH4k+H9V0rTv
        FOsQb7Px/wCDLiG6h1QY+X7VGjeVc44BJ2zALt3gDFAH8ktFfp1+1t/wab/tUfs9alczeDdL0P4w6BGS
        0V14evEt73Zj/lpaXBRw3tG0n1r4t8Zf8E3/ANoX4d3bQa78CvjDpEikj/SvB2oxBsHGQTDgj3BwaAPF
        6K94+HX/AAS3/aT+LOow23h74CfF/UmncIJV8JX0duhPQvM8YjQe7MB7194/sbf8GgP7Q/xt1C0vfipq
        Xh34PeH2IaaKe4XVdYZc8hIIGMSnHd5lIyPlPSgD8s/hn8MvEPxm8f6R4V8KaNqHiHxHr1ytpp+nWMJm
        uLuVuiqo5PqT0ABJwATX9Tv/AAb9/wDBCCw/4JbfDyXxv48Sw1b44eKrTyL2SIrPb+GLVjn7HbyY+aRs
        L50gOCQEXKrufv8A9m/9iH9kv/g3s+At94vvNQ0bwxc/ZjDqfjTxLcLNrWrnAJgt1A3YYqCLe2T5iASG
        IzXxlqX/AAevfDSy+J+p2cHwU8Z33g+G68ux1RdYt4r+4hHBle1ZCisTkhPO6Yy2c0AftpRX5+fsn/8A
        Bzl+yL+1Rf22ny+Orv4Z6xdAbbTxtaDTYd2CSpu1aS1XGOryrnIA5OK+9/D/AIh0/wAWaJbanpN/Y6pp
        t4gkt7uzuEuIJ1PRkdCVYe4NAFyiiigAooooAKKKKACiiigAooooAK8u/bB/bN+G/wCwb8EdQ+IXxR8S
        W/hzw5YERoSplub+Y/dgt4V+aWVv7o6DJYhQSIf22/2zfA/7AP7NPiT4pfEDUFs9D8PwEw2yOoutXuip
        MNlbqxAeaVhgDOAAzMQqsR/H/wD8FMv+CmfxI/4Kj/tEXfjnx7qDpYWrSQeHtAgc/YPDtmzZEMKdC7AK
        ZJT80jKCThVVQD69/wCCp3/B0l8Z/wBtbUtR8M/Cy51D4OfDNy0Kx6ddFde1aPkbrm7TBiVhj91DtA5B
        eTrX5fX19Pqd5LcXM0txcTsXkllcu8jHqSTySfU1FRQAV7X+xx/wUW+NX7Afiv8AtX4T/ELX/CnmOHub
        CKbztOvsEcTWsm6KTIGMldwHQivFKKAP3N/Zf/4PWPFWg6RDY/GP4OaP4luUwG1fwrqTaZI4HGWtZllR
        mPUlZEX0UZ4+rvBn/B5R+zFrUCjU/Dfxc0CTaCwfTLW4QHuAY7jJ+u0V/MJRQB/Tb4+/4PNf2btEgmGi
        +C/i14jnRcxh7S0s4pD6bmnZh9dlfG37W3/B578VfiDYy6b8HPht4Z+HMEisjarrNy2uaj22tEm2KCI9
        QQ6TdRgjFfi3RQB6J+0r+1t8TP2xfH0nif4oeOPEfjfW3yEn1S8aZbdSc7IY/uRJ/sRqqj0rzuiigAr6
        S/YH/wCCtXx3/wCCbfiuG9+GfjfULfRxIHuvDepO95od+M5IktWbapOMb4ykgHRxXzbRQB/XP/wR7/4O
        Avhb/wAFVdOt/DU0aeAfi/BAZLnwvdXHmRakFBLy2ExA81QBuMbASID0YDfX3zX8F3hXxVqfgXxNp+ta
        JqN9pGsaTcx3ljfWc7QXFnNGwZJY5FIZHVgCGBBBAIr+pP8A4N1P+C66f8FKvhs/w3+Jd/ZW/wAb/CVo
        JDNhIF8X2SAA3caAgfaUxmZEAXkOoALKgB+n1FFFABRRRQAUUUUAFKil3CjqTgUlfIH/AAXd/bWuf2Df
        +CYHxI8Y6TeSWPijVrZfDegTRsVkhvLzMXmoQQQ0UXmyAjkGMUAfgJ/wcv8A/BVib/goH+2ld+DfC+q/
        afhR8KLiXTNIEEhMGrXw+W6vyOjZcGOM8jy03A/vDX5s0UUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUA
        Fdh8Afjv4p/Zh+NHhr4geCtUn0bxT4Tvo9Q067iJBjkU8qwH3kZSysp4ZWYHgmuPooA/t2/4J4ftueHf
        +Cif7Hvgz4teGxHbw+JbUi/sFfc2lX8Z2XNq3f5JAcEj5kZGHDA17VX87n/BmJ+2nc+Ffjj8Q/gJqV2f
        7I8W2B8VaLE7HbFf23lxXCqM4zLblCcDJ+yrX9EdABRRRQAUUUUAFfhJ/wAHtHxsms/BnwI+HEMpEGoX
        epeJbqMEYLQrHbQk9+k0+Pxr926/mk/4PTPENzc/8FHPhnpTvmzsvhnbXcS+kkuq6mjn8RDH+VAH49UU
        UUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAH1H/AMEUfjbP+z9/wVe+AniGGRoopfGNjpNyQQAY
        L2UWcuc9gk5J+lf2fSJ5bsp6qcV/CH8GPEtz4M+MPhPWLMkXmk6zZ3kBHUSRzo6/qBX9391/x8yf7x/n
        QBHRRRQAUUUUAFfz3f8AB7J8DLq1+LXwQ+JkVrI1lqGjXnhe6uQp2xyQXBuYYyegLLczkD/Yb0Nf0JKu
        7+JR9c14j/wUL/4J/wDgP/gpV+zDrHwu8frKmnX7pd2Go2o/0vRr2MHyrqEkY3DcylTwyuyng0AfxGUV
        +wnxU/4Mw/2hPDviSSLwh8QvhV4n0jeRFc3895pdyV7F4RBMqn2WRsepra+F/wDwZW/GjW7mE+Mfi58N
        fDtu4/enSra91WaM+gV0t1b/AL7FAH4w0V/S/wDAT/gzK+AHgcwT+PviB8QPHlwgBkt7fydHtHOORhBJ
        Jgn0kB6c19n/AAQ/4IR/sh/ACGH+xfgR8P8AUriALtuvENm2uzEqchs3fmKG91UUAfxuaToN9r0xjsbK
        7vZB1WCFpCPwANdhpX7LnxN120W4sfh147vIHGVkg0C7kRh7ERkV/cb4M+GPhr4b2og8OaB4d8PwqMBN
        M06KzUDpjEaLW950n/Pc/wDfTf4UAfwu/wDDIXxZ/wCiX/ET/wAJu8/+N0f8MhfFn/ol/wARP/CbvP8A
        43X90XnSf89z/wB9N/hR50n/AD3P/fTf4UAfwu/8MhfFn/ol/wARP/CbvP8A43R/wyF8Wf8Aol/xE/8A
        CbvP/jdf3RedJ/z3P/fTf4UedJ/z3P8A303+FAH8Lj/si/FhFJb4YfEMAdSfDl5x/wCQ65fxB8NfEfhN
        pBqvh/W9MMP+sF3YywlO/O5Riv7y/Ok/57n/AL6b/Cq+p6fBrdm9vex2t7byDDRXEfmow91YEGgD+CGi
        v7cPjJ/wTF/Zz/aDhlHjL4IfCnXJpV2G7fw3bQ3ijrhbiJFlX8HFfHXx7/4NJv2R/i/9om8P2HjD4b3s
        2SraJrL3ECHGB+6ullGB1wCPrQB/KpRX7tfG7/gyY160upZfhx8dtIv4Sw8u18SaDJaMg75ngkl3f9+h
        XiE3/Bmr+1Gmt+Qniz4MPZ78fav7Zvx8vrs+xZz7UAfAf/BNP4I3X7R3/BQX4MeCrW1e8/t7xjpkVzGq
        7ttstyj3Dn2WFZGPspr+3OdxJM7DozE1+Zn/AAQ//wCDcvw7/wAEsfF9z8RvGHiaz8e/FS5tHsbOa2tG
        h03w/DJgSfZw+XklcDaZWCYQlQoyxb9MmXb/ABKfpmgBKKKKAP/Z
</value>
  </data>
</root>